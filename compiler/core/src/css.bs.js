// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var $$Array                 = require("bs-platform/lib/js/array.js");
var Csscolorparser          = require("csscolorparser");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function parseColor(value) {
  var match = Csscolorparser.parseCSSColor(value);
  if (match == null) {
    return /* None */0;
  } else {
    var exit = 0;
    var match$1 = $$Array.to_list(match);
    if (match$1) {
      var match$2 = match$1[1];
      if (match$2) {
        var match$3 = match$2[1];
        if (match$3) {
          var match$4 = match$3[1];
          if (match$4) {
            if (match$4[1]) {
              exit = 1;
            } else {
              return /* Some */[/* float array */[
                        match$1[0],
                        match$2[0],
                        match$3[0],
                        match$4[0]
                      ]];
            }
          } else {
            exit = 1;
          }
        } else {
          exit = 1;
        }
      } else {
        exit = 1;
      }
    } else {
      exit = 1;
    }
    if (exit === 1) {
      throw [
            Caml_builtin_exceptions.match_failure,
            [
              "/Users/devin_abbott/Projects/ComponentStudio/ComponentStudio/compiler/core/src/css.re",
              15,
              8
            ]
          ];
    }
    
  }
}

function parseColorDefault($$default, value) {
  var match = parseColor(value);
  if (match) {
    return match[0];
  } else {
    var match$1 = parseColor($$default);
    if (match$1) {
      return match$1[0];
    } else {
      return /* float array */[
              0.0,
              0.0,
              0.0,
              0.0
            ];
    }
  }
}

exports.parseColor        = parseColor;
exports.parseColorDefault = parseColorDefault;
/* csscolorparser Not a pure module */
